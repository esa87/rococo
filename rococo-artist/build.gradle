plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
	id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'guru.qa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.5.0-SNAPSHOT'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
	implementation "org.flywaydb:flyway-mysql:${project.ext.flywayVersion}"
	implementation 'net.devh:grpc-spring-boot-starter:3.1.0.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.grpc:grpc-services'
	runtimeOnly "mysql:mysql-connector-java:${project.ext.mysqlDriverVersion}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${dependencyManagement.importedProperties['protobuf-java.version']}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${dependencyManagement.importedProperties['grpc.version']}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

jib {
	container {
		ports = ['8091']
		jvmFlags = ["-Dspring.profiles.active=${System.env.PROFILE}"]
		environment = [
				'TZ'         : 'Europe/Moscow'
		]
		creationTime = 'USE_CURRENT_TIMESTAMP'
		labels = [
				'maintainer': 'Erchenkov Sergey @esa_87',
				'version'   : "${project.version}".toString()
		]
	}
	from {
		image = "${project.ext.dockerImage}"
		platforms {
			platform {
				architecture = "${project.ext.dockerArch}"
				os = 'linux'
			}
		}
	}
	to {
		image = "${project.ext.dockerHubName}/${project.name}-${System.env.PROFILE}"
		tags = ['latest', "${project.version}"]
	}
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test
