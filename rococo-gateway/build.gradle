plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
	id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'guru.qa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.5.0-SNAPSHOT'
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.data:spring-data-commons'

	// gRPC
	implementation "io.grpc:grpc-netty-shaded:${project.ext.grpcVersion}" // Для Netty транспорта (клиент)
	implementation "io.grpc:grpc-protobuf:${project.ext.grpcVersion}" // Для работы с Protobuf
	implementation "io.grpc:grpc-stub:${project.ext.grpcVersion}" // Для gRPC Stub // Для gRPC сервисов
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Protobuf
	implementation "com.google.protobuf:protobuf-java:${project.ext.protobufVersion}"
	implementation "com.google.protobuf:protobuf-java-util:${project.ext.protobufVersion}"
	implementation project(':rococo-grpc-common')
	// Lombok
	compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"

	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	// Тестирование
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jib {
	container {
		ports = ['8091']
		jvmFlags = ["-Dspring.profiles.active=${System.env.PROFILE}"]
		environment = [
				'TZ'         : 'Europe/Moscow'
		]
		creationTime = 'USE_CURRENT_TIMESTAMP'
		labels = [
				'maintainer': 'Erchenkov Sergey @esa_87',
				'version'   : "${project.version}".toString()
		]
	}
	from {
		image = "${project.ext.dockerImage}"
		platforms {
			platform {
				architecture = "${project.ext.dockerArch}"
				os = 'linux'
			}
		}
	}
	to {
		image = "${project.ext.dockerHubName}/${project.name}-${System.env.PROFILE}"
		tags = ['latest', "${project.version}"]
	}
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test
