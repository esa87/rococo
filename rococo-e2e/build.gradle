buildscript {
    ext {
        selenideVersion = '7.4.2'
        allureVersion = '2.29.0'
        retrofitVersion = '2.11.0'
        fakerVersion = '1.0.2'
        okhttp3Version = '4.11.0'
        hibernateVersion = '6.6.0.Final'
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
    id 'io.qameta.allure-adapter' version '2.12.0'
}

group = 'guru.qa'
version = 'unspecified'

allure {
    version.set("${allureVersion}")
    adapter {
        aspectjVersion.set("1.9.22")
        autoconfigure.set(true)
        aspectjWeaver.set(true)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    //Rest
    testImplementation "com.squareup.okhttp3:okhttp:${okhttp3Version}"
    testImplementation "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}"
    testImplementation "com.squareup.okhttp3:okhttp-urlconnection:${okhttp3Version}"
    testImplementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    //Grpc
    testImplementation "io.grpc:grpc-netty:${project.ext.grpcVersion}"
    testImplementation "io.grpc:grpc-api:${project.ext.grpcVersion}"
    testImplementation "io.grpc:grpc-stub:${project.ext.grpcVersion}"
    // Protobuf
    testImplementation "com.google.protobuf:protobuf-java:${project.ext.protobufVersion}"
    testImplementation "com.google.protobuf:protobuf-java-util:${project.ext.protobufVersion}"
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    testImplementation project(':rococo-grpc-common')
    //Allure
    testImplementation "io.qameta.allure:allure-attachments:${allureVersion}"
    testImplementation("io.qameta.allure:allure-junit5:${allureVersion}") {
        exclude group: "org.junit.jupiter"
    }
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}") {
        exclude group: 'com.codeborne'
    }
    testImplementation "io.qameta.allure:allure-okhttp3:${allureVersion}"
    testImplementation "io.qameta.allure:allure-grpc:${allureVersion}"
    //Utils
    testImplementation("com.github.javafaker:javafaker:${fakerVersion}") {
        exclude group: 'org.yaml'
    }
    testImplementation 'org.springframework:spring-core:6.1.5'
    testImplementation 'ru.yandex.qatools.ashot:ashot:1.5.4'
    testImplementation 'org.yaml:snakeyaml:2.2'
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    // Lombok
    testAnnotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    //DB
    testImplementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
    testImplementation "org.flywaydb:flyway-mysql:${project.ext.flywayVersion}"
    testImplementation "org.hibernate:hibernate-core:${hibernateVersion}"

}

test {
    useJUnitPlatform()
}